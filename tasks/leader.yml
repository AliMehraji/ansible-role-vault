---
- name: configure leader
  block:
    - name: start vault leader
      service:
        name: vault
        state: started
        enabled: true

    - name: check status of vault leader
      command: vault status -format=yaml
      environment:
        VAULT_ADDR: "http://127.0.0.1:8200"
      changed_when: no
      check_mode: no
      failed_when: no
      register: vault_status_raw

    - name: save vault_status for leader
      set_fact:
        vault_status: "{{ vault_status_raw.stdout | from_yaml }}"

    - name: initialize vault on leader
      command: vault operator init -key-shares={{ vault_key_shares }} -key-threshold={{ vault_key_threshold }} -format=yaml
      register: vault_operator_init
      environment:
        VAULT_ADDR: "http://127.0.0.1:8200"
      when:
        - not vault_status.initialized | bool

    - name: save vault_init_output for leader
      set_fact:
        vault_init_output: "{{ vault_operator_init.stdout | from_yaml }}"
      when:
        - vault_operator_init is defined
        - vault_operator_init.stdout is defined

    - name: unseal vault leader
      block:
        - name: show unseal information
          block:
            - name: show unseal keys for leader
              debug:
                msg: "{{ vault_init_output.unseal_keys_b64 }}"

            - name: show root token for leader
              debug:
                msg: "{{ vault_init_output.root_token }}"
          when:
            - vault_show_unseal_information | bool

        - name: unseal vault leader
          command: vault operator unseal {{ item }}
          environment:
            VAULT_ADDR: "http://127.0.0.1:8200"
          loop: "{{ vault_init_output.unseal_keys_b64 }}"
          loop_control:
            label: "hidden"
          no_log: yes
      when:
        - vault_init_output is defined
        - vault_init_output.unseal_keys_b64 is defined
        - vault_init_output.unseal_keys_b64 is iterable
  run_once: yes
